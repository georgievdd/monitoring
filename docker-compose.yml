version: "3.8"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
    volumes:
      - db-data:/var/lib/postgresql/data

  app:
    build: .
    ports: ["8080:8080"]
    depends_on:
      - db
    environment:
      SPRING_PROFILES_ACTIVE: docker

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest            # сбор метрик PostgreSQL :contentReference[oaicite:5]{index=5}
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:example@db:5432/appdb?sslmode=disable"
    ports: ["9187:9187"]
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:v2.48.1                                  # официальный образ Prometheus :contentReference[oaicite:6]{index=6}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
    ports: ["9090:9090"]
    depends_on:
      - app
      - postgres_exporter

  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports: ["9093:9093"]

  grafana:
    image: grafana/grafana:10.4.1
    environment:
      GF_INSTALL_PLUGINS: "grafana-postgres-datasource"             # автоматически установит плагин для Postgres :contentReference[oaicite:7]{index=7}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning                   # datasource и дашборды
    ports: ["3000:3000"]
    depends_on:
      - prometheus
      - db

volumes:
  db-data:
  grafana-data: